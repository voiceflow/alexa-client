name: PR-label -> preview dev env

on:
  pull_request:
    types: [reopened, labeled]

jobs:
  preview:
    name: Preview commit on env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Check PR env labels
        uses: voiceflow/pr-label-match@master
        with:
          regex: "env-"
        id: envNameLabel
      - name: Check for new env request
        uses: Dreamcodeio/pr-has-label-action@master
        id: newEnvLabel
        with:
          label: new-env
      - name: Install vfcli
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
        run: |
          API_URL="https://$GITHUB_TOKEN:@api.github.com/repos/voiceflow/vfcli"
          ASSET_ID=$(curl $API_URL/releases/latest | jq -r '.assets[3].id')
          curl -J -L -H "Accept: application/octet-stream" "$API_URL/releases/assets/$ASSET_ID" --output vfcli.tar.gz
          tar -xf vfcli.tar.gz

      - name: Set common vars
        id: vars
        run: |
          PREFIX="$(echo "${GITHUB_SHA}" | cut -c1-5)"
          ENV_NAME="${GITHUB_ACTOR}-${PREFIX}" 

          echo -e "::set-output name=envName::${ENV_NAME}"

      - name: Create new environment if applicable
        if: steps.newEnvLabel.outputs.hasLabel == 'true' && steps.envNameLabel.outputs.label == ''
        id: createNewEnv
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          sleep $[ ( $RANDOM % 10 ) ]s # Add dither to desync multiple tag request firings

          echo "Initializating vfcli..."
          ./vfcli init --interactive false

          echo "Creating new environment..."
          ./vfcli env create ${{steps.vars.outputs.envName}} --interactive false
          NEW_ENV_NAME="test-${{steps.vars.outputs.envName}}"
          NEW_LABEL="env-test-${{steps.vars.outputs.envName}}"

          # Get all components and retrieve the line that has the json output
          #COMPONENT_URLS=$(./vfcli component list --verbose --output json | grep { | jq -c '.[] | select(.id | contains("creator-app")).endpoint')
          #COMPONENT_URLS=$(./vfcli component list  --interactive false --verbose --output json )
          cat /home/runner/.vfcli.yaml
          echo "${COMPONENT_URLS}"

          echo -e "::set-output name=newEnvName::${NEW_ENV_NAME}"
          echo -e "::set-output name=newLabel::${NEW_LABEL}"
          echo -e "::set-output name=endpoints::${COMPONENT_URLS}"

      - name: Tag PR with new environment name
        uses: buildsville/add-remove-label@v1
        if: steps.newEnvLabel.outputs.hasLabel == 'true' && steps.envNameLabel.outputs.label == ''
        with:
          token: ${{secrets.GH_SA_TOKEN}}
          label: ${{ steps.createNewEnv.outputs.newLabel }}
          type: add

      - name: Remove new-env label (if exist)
        uses: buildsville/add-remove-label@v1
        if: steps.newEnvLabel.outputs.hasLabel == 'true' && steps.envNameLabel.outputs.label == ''
        with:
          token: ${{secrets.GH_SA_TOKEN}}
          label: new-env
          type: remove

      - name: Preview tracking
        if: steps.newEnvLabel.outputs.hasLabel == 'true' && steps.envNameLabel.outputs.label == ''
        id: preview
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |

          echo "Creating track..."
          COMPONENT=$(echo "${GITHUB_REPOSITORY}" | sed 's:.*/::')
          BRANCH="$(echo ${GITHUB_HEAD_REF#refs/heads/})"
          ./vfcli track create -c $COMPONENT -b $BRANCH --interactive false

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@master
        if: steps.newEnvLabel.outputs.hasLabel == 'true' && steps.envNameLabel.outputs.label == ''
        with:
          message: "Dev environment ${{ steps.createNewEnv.outputs.newEnvName }} created!"
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@master
        if: steps.newEnvLabel.outputs.hasLabel == 'true' && steps.envNameLabel.outputs.label == ''
        with:
          message: "${{ steps.createNewEnv.outputs.endpoints }}"
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
